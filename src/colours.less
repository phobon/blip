/*
    A set of colours and colour procs.
    This file will generate a series of lightweight classes for each of the colours below:

    .@{color} : foreground colour
    .@{color}-bg : background colour
    .@{color}-f : fill colour
    .@{color}-t-bg : transparent background colour
    .@{color}-br : border colour

    .@{color}-l | -bg | -f | -t : light
    .@{color}-m | -bg | -f | -t : medium
    .@{color}-h | -bg | -f | -t : heavy
*/

/* Colors */
@c-black:                       #000;
@c-white:                       #FFF;

@c-gray-l:                      #d7d7d7;
@c-gray-m:                      #929292;
@c-gray-h:                      #4f4f4f;

@c-transparent:                 rgba(0, 0, 0, 0);

@colours: 
    black @c-black, 
    white @c-white, 
    gray-l @c-gray-l,
    gray-m @c-gray-m,
    gray-h @c-gray-h,
    transparent @c-transparent;

.bg-none {
    background: none;
}

.color-proc(@label, @color) {
    /* Generic - color, background, fill and transparent */
    .c-@{label} {
        color: @color;
    }

    .c-@{label}-bg {
        background-color: @color;
    }

    .c-@{label}-f {
        fill: @color;
    }

    .c-@{label}-t-bg {
        background-color: fadeout(@color, 50%);
    }

    /* Lights, darks and corresponding transparents */
    @color-l: lighten(@color, 5%);
    @color-h: darken(@color, 5%);    
    .c-@{label}-l {
        color: @color-l;
    }

    .c-@{label}-l-bg {
        background-color: @color-l;
    }

    .c-@{label}-l-f {
        fill: @color-l;
    }

    .c-@{label}-l-t-bg {
        background-color: fadeout(@color-l, 50%);
    }

    .c-@{label}-h {
        color: @color-h;
    }

    .c-@{label}-h-bg {
        background-color: @color-h;
    }

    .c-@{label}-h-f {
        fill: @color-h;
    }

    .c-@{label}-h-t-bg {
        background-color: fadeout(@color-h, 50%);
    }
    /* Border colours */
    .c-@{label}-br {
        border-color: @color;
    }
    .c-@{label}-l-br {
        border-color: @color-l;
    }
    .c-@{label}-h-br {
        border-color: @color-h;
    }
}
.color-procs(@iterator:1) when (@iterator <= length(@colours)) {
    @label: extract(extract(@colours, @iterator), 1);
    @color: extract(extract(@colours, @iterator), 2);

    .color-proc(@label, @color);

    .color-procs((@iterator + 1));
}
.color-procs();

