/*
    Blip, atomic css framework.
    This file contains the core files and procs for the system.
    This can be included in a project and customised further.
*/
/* 
    Z-index values
    These range from -1 to 10; anything more than this is likely overkill.
*/
.z-below {
  z-index: -1; }

/*
    Box-sizing atoms.
*/
.bs-border {
  box-sizing: border-box; }

.bs-content {
  box-sizing: content-box; }

/*
    Display atoms.
*/
.d-block {
  display: block; }

.d-inline {
  display: inline; }

.d-inline-block {
  display: inline-block; }

.d-none {
  display: none; }

.d-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.d-inline-flex {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex; }

.d-table {
  display: table; }

.d-table-cell {
  display: table-cell; }

/*
    Position atoms.
*/
.pos-fixed {
  position: fixed; }

.pos-absolute {
  position: absolute; }

.pos-relative {
  position: relative; }

/*
    Overflow atoms.
*/
.of-auto {
  overflow: auto; }

.of-x-auto {
  overflow-x: auto; }

.of-y-auto {
  overflow-y: auto; }

.of-visible {
  overflow: visible; }

.of-x-visible {
  overflow-x: visible; }

.of-y-visible {
  overflow-y: visible; }

.of-hidden {
  overflow: hidden; }

.of-x-hidden {
  overflow-x: hidden; }

.of-y-hidden {
  overflow-y: hidden; }

.of-scroll {
  overflow: scroll; }

.of-x-scroll {
  overflow-x: scroll; }

.of-y-scroll {
  overflow-y: scroll; }

/*
    Mixin to build opacity atoms.
    This function will create classes corresponding to opacity values: 1 through to 0

    .o-[percentage]:        Opacity based on percentage (ie: o-50: 50% or 0.5)
*/
/*
    Cursor-style atoms.
*/
.cur-default {
  cursor: default; }

.cur-pointer {
  cursor: pointer; }

.cur-move {
  cursor: move; }

/*
    Pointer-events atoms.
*/
.pe-all {
  pointer-events: all; }

.pe-none {
  pointer-events: none; }

/*
    Resize atoms.
*/
.resize-none {
  resize: none; }

.resize-both {
  resize: both; }

.resize-horizontal {
  resize: horizontal; }

.resize-vertical {
  resize: vertical; }

/*
    User-select atoms.
*/
.us-none {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

.us-auto {
  -webkit-user-select: auto;
     -moz-user-select: auto;
      -ms-user-select: auto;
          user-select: auto; }

.us-text {
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text; }

/*
    Visibility atoms.
*/
.vis-hidden {
  visibility: hidden; }

.vis-visible {
  visibility: visible; }

/*
    List-style atoms.
*/
.ls-none {
  list-style: none; }

.ls-circle {
  list-style: circle; }

.ls-square {
  list-style: square; }

/* Sizing, flex and grid */
/* 
    Modular css to define sizing-related classes - not to be confused with layout.     

    This will generate classes that represent margins, paddings, widths and heights.

    .m-0: no margin
    .m-[size] : margin on all sides
    .m-l-[size] : left margin
    .m-r-[size] : right margin
    .m-t-[size] : top margin
    .m-b-[size] : bottom margin
    .m-horizontal-[size] : left and right margin
    .m-vertical-[size]: top and bottom margin

    .p- | none | l | r | t | b | horizontal | vertical | - [size] : paddings

    .w-[size] : width
    .w-min-[size] : min-width
    .h-[size] : height
    .h-min-[size] : min-height
*/
/*
    Mixins to build a basic grid layout.

    Builds a grid up to 5 distinct cells with the provided gutter.
    This will probably become redundant when CSS grid implementation becomes more widespread.

    .col-[count]:       Column based on size of count with horizontal gutter
    .row-[count]:       Row based on size of count with vertical gutter
*/
/*
    Flexbox model atoms

    This is the engine-room for a lot of what blip is about - the flexbox layout model.
    This class contains a set of modular classes that are designed to live on their to handle the majority of layout.
*/
/* 
    Handle flex grow and shrink extents 
*/
.f-grow-0 {
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0; }

.f-shrink-0 {
  -ms-flex-negative: 0;
      flex-shrink: 0; }

.f-grow-1 {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

.f-shrink-1 {
  -ms-flex-negative: 1;
      flex-shrink: 1; }

.f-grow-2 {
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2; }

.f-shrink-2 {
  -ms-flex-negative: 2;
      flex-shrink: 2; }

.f-grow-3 {
  -webkit-box-flex: 3;
      -ms-flex-positive: 3;
          flex-grow: 3; }

.f-shrink-3 {
  -ms-flex-negative: 3;
      flex-shrink: 3; }

.f-grow-4 {
  -webkit-box-flex: 4;
      -ms-flex-positive: 4;
          flex-grow: 4; }

.f-shrink-4 {
  -ms-flex-negative: 4;
      flex-shrink: 4; }

.f-grow-5 {
  -webkit-box-flex: 5;
      -ms-flex-positive: 5;
          flex-grow: 5; }

.f-shrink-5 {
  -ms-flex-negative: 5;
      flex-shrink: 5; }

/* 
    Flex alignment and justification 
*/
.f-ai-start {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }

.f-as-start {
  -ms-flex-item-align: start;
      align-self: flex-start; }

.f-j-start {
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start; }

.f-ac-start {
  -ms-flex-line-pack: start;
      align-content: flex-start; }

.f-ai-center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.f-as-center {
  -ms-flex-item-align: center;
      -ms-grid-row-align: center;
      align-self: center; }

.f-j-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.f-ac-center {
  -ms-flex-line-pack: center;
      align-content: center; }

.f-ai-end {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end; }

.f-as-end {
  -ms-flex-item-align: end;
      align-self: flex-end; }

.f-j-end {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.f-ac-end {
  -ms-flex-line-pack: end;
      align-content: flex-end; }

.f-ai-stretch {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }

.f-ac-stretch {
  -ms-flex-line-pack: stretch;
      align-content: stretch; }

.f-j-space-around {
  -ms-flex-pack: distribute;
      justify-content: space-around; }

.f-ac-space-around {
  -ms-flex-line-pack: distribute;
      align-content: space-around; }

.f-j-space-between {
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.f-ac-space-between {
  -ms-flex-line-pack: justify;
      align-content: space-between; }

/* 
    Flex wrapping 
*/
.f-w-wrap {
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.f-w-nowrap {
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap; }

.f-w-wrap-reverse {
  -ms-flex-wrap: wrap-reverse;
      flex-wrap: wrap-reverse; }

/* 
    Direction 
*/
.f-d-row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row; }

.f-d-column {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }

/*
    Makes an element flexible and fills a container.
*/
.f {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto; }

/*
    Handle row and column directions.
*/
.f-column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }

.f-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row; }

/*
    Makes an element flexible but sizes to its own content.
*/
.f-none {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none; }

/*
    Handle row and column directions.
*/
.f-none-column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }

.f-none-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row; }

/*
    Handle some special fill cases in rows and columns.
    1) Placing in a column, fill width.
    2) Placing in a row, fill height.
*/
.f-none-fill-horizonal {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
  width: 100%; }

.f-none-fill-vertical {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
      -ms-flex: none;
          flex: none;
  height: 100%; }

/*
    Resize atoms.
*/
.resize-none {
  resize: none; }

.resize-both {
  resize: both; }

.resize-horizontal {
  resize: horizontal; }

.resize-vertical {
  resize: vertical; }

/*
    Mixins to build border atoms.

    .br-[size] : Solid border of [size]

    .br-l-[size] : Solid left border of [size]
    .br-r-[size] : Solid right border of [size]
    .br-b-[size] : Solid bottom border of [size]
    .br-t-[size] : Solid top border of [size]

    .br-horizontal-[size] : Solid horizontal (left & right) border of [size]
    .br-vertical-[size] : Solid vertical (top & bottom) border of [size]

    .br-ra-[size]: Border radius of [size]
    .br-ra-tl-[size]: Top-left border radius of [size]
    .br-ra-tr-[size]: Top-right border radius of [size]
    .br-ra-bl-[size]: Bottom-left border radius of [size]
    .br-ra-br-[size]: Bottom-right border radius of [size]
*/
.br-ra-100 {
  border-radius: 100%; }

/*
    Border-style atoms.
*/
.br-st-solid {
  border-style: solid; }

.br-st-dashed {
  border-style: dashed; }

.br-st-dotted {
  border-style: dotted; }

/*
    Mixins to build outline atoms.

    .oline-[size] : Solid outline of [size]
*/
.oline-0, .oline-1, .oline-quarterrem, .oline-halfrem {
  outline-style: solid; }

/*
    Outline-offset atoms.
*/
/*
    Outline-style atoms.
*/
.oline-st-solid {
  outline-style: solid; }

.oline-st-dashed {
  outline-style: dashed; }

.oline-st-dotted {
  outline-style: dotted; }

/* Fonts and typography */
/*
    Text-alignment atoms.
*/
.ta-justify {
  text-align: justify; }

.ta-center {
  text-align: center; }

.ta-l {
  text-align: left; }

.ta-r {
  text-align: right; }

/*
    Text-decoration atoms.
*/
.td-none {
  text-decoration: none; }

.td-underline {
  text-decoration: underline; }

.td-line-through {
  text-decoration: line-through; }

/*
    Simple text transforms.
*/
.tt-none {
  text-transform: none; }

.tt-lc {
  text-transform: lowercase; }

.tt-uc {
  text-transform: uppercase; }

/*
    Line-height atoms.
*/
/*
    Word-wrap atoms.
*/
.ww-normal {
  word-wrap: normal; }

.ww-break-word {
  word-wrap: break-word; }

/*
    White-space atoms.
*/
.ws-initial {
  white-space: initial; }

.ws-nowrap {
  white-space: nowrap; }

.ws-pre {
  white-space: pre; }

.ws-pre-line {
  white-space: pre-line; }

.ws-pre-wrap {
  white-space: pre-wrap; }

/*
    Text-overflow atoms.
*/
.t-oflow-initial {
  text-overflow: initial; }

.t-oflow-ellipsis {
  text-overflow: ellipsis; }

.t-oflow-clip {
  text-overflow: clip; }

/*
    Modular css for font families.
    We went maximum compatibility here and speed here - we don't want to use web fonts at all. So we're utilizing system fonts where we can
    This code is taken specifically from tachyons https://github.com/tachyons-css/tachyons
    See https://www.smashingmagazine.com/2015/11/using-system-ui-fonts-practical-guide/ for some details on why we would use system fonts
    See http://mrmrs.io/writing/2016/03/17/webfonts/ for more information on web fonts and why we should avoid them
*/
.sans-serif, html {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif; }

.serif {
  font-family: georgia, times, serif; }

.system-sans-serif {
  font-family: sans-serif; }

.system-serif {
  font-family: georgia, times, serif; }

.monospace, code, .code {
  font-family: Consolas, monaco, monospace; }

/*
    Font-size atoms.

    The font-size system is based around rems; so the base font-size of the site is extremely important. We use rem for sizing to create a consitent
    experience across responsive environments.

    .fs-[size]:     Descending font-size. The larger the number, the smaller the font-size is; to match header styles.
*/
/*
    Font-style atoms.
*/
.f-st-italic {
  font-style: italic; }

.f-st-normal {
  font-style: normal; }

.f-st-oblique {
  font-style: oblique; }

/*
    Font-weight atoms.
*/
/*
    Various typographic mixins.
    Classes are taken from font-family, font-sizes, font-spacing, etc.   
    
    This is built to a certain preference; override these styles as required.
*/
/* 
    Consistent heading styles. 
*/
h1, h2, h3, h4, h5, h6 {
  margin: 0; }

.nowrap {
  white-space: nowrap;
  text-overflow: ellipsis; }

pre {
  white-space: pre; }

/* Colour procs */
/*
    Mixins to build colour atoms.

    NOTE: Colour swatches are not native to blip, these are handled separately.

    .c-[colour] : foreground colour
    .c-[colour]-bg : background colour
    .c-[colour]-f : fill colour
    .c-[colour]-t-bg : transparent background colour
    .c-[colour]-br : border colour

    .c-[colour]-l | -bg | -f | -t | -br : light
    .c-[colour]-m | -bg | -f | -t | -br : medium
    .c-[colour]-h | -bg | -f | -t | -br : heavy
*/
/* Transition base and animations */
/*
    Transform-origin atoms.
*/
.to-l {
  -webkit-transform-origin: left;
          transform-origin: left; }

.to-r {
  -webkit-transform-origin: right;
          transform-origin: right; }

.to-center {
  -webkit-transform-origin: center;
          transform-origin: center; }

.to-l-t {
  -webkit-transform-origin: left top;
          transform-origin: left top; }

.to-l-b {
  -webkit-transform-origin: left bottom;
          transform-origin: left bottom; }

.to-r-t {
  -webkit-transform-origin: right top;
          transform-origin: right top; }

.to-r-b {
  -webkit-transform-origin: right bottom;
          transform-origin: right bottom; }

/*
    Transition atoms.
    Note: This is a bit of a sledgehammer case here; it doesn't handle all of the cases I want.
*/
.transition-none {
  transition: none !important; }

.anim-rotate {
  -webkit-animation-name: rotate;
          animation-name: rotate;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear; }

@-webkit-keyframes rotate {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes rotate {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

/*
    Box-shadow atoms.
    These are typically lightweight classes that might require customisation at some point.
*/
.bshad-0 {
  box-shadow: none; }

/* Resets */
/* 
    Resets for blip design system.
*/
html, body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0; }

/*
    Default everything to .border-box - it just makes everything simpler.
*/
html, body,
div, article, section, main, footer, header,
form, fieldset,
pre, code,
p,
ul, ol, li,
dl, dt, dd,
textarea,
input[type="text"], input[type="tel"], input[type="email"], input[type="url"], input[type="password"] {
  box-sizing: border-box; }

/*
    Basic style for lists with no adornment.
*/
ul, ol {
  list-style: none;
  margin: 0;
  padding: 0; }

/*
    -------------------------------------
            Essential/core mixins
    -------------------------------------
*/
/*
    Sizing.
    These are absolutely essential to the flexible, responsive layout system in Blip.
    This size map can be pruned to requirements, as sizing classes do end up taking a lot of space.
*/
/* Margins */
.m-auto {
  margin: auto; }

.m-l-auto {
  margin-left: auto; }

.m-r-auto {
  margin-right: auto; }

.m-horizontal-auto {
  margin-left: auto;
  margin-right: auto; }

.m-t-auto {
  margin-top: auto; }

.m-b-auto {
  margin-bottom: auto; }

.m-vertical-auto {
  margin-top: auto;
  margin-bottom: auto; }

/* Paddings */
.p-auto {
  padding: auto; }

.p-l-auto {
  padding-left: auto; }

.p-r-auto {
  padding-right: auto; }

.p-horizontal-auto {
  padding-left: auto;
  padding-right: auto; }

.p-t-auto {
  padding-top: auto; }

.p-b-auto {
  padding-bottom: auto; }

.p-vertical-auto {
  padding-top: auto;
  padding-bottom: auto; }

/* Height & Width */
.h-auto {
  height: auto; }

.h-min-auto {
  min-height: auto; }

.h-max-auto {
  max-height: auto; }

.w-auto {
  width: auto; }

.w-min-auto {
  min-width: auto; }

.w-max-auto {
  max-width: auto; }

.co-l-auto {
  left: auto; }

.co-t-auto {
  top: auto; }

.co-r-auto {
  right: auto; }

.co-b-auto {
  bottom: auto; }

.co-all-auto {
  left: auto;
  top: auto;
  bottom: auto;
  right: auto; }

/* Margins */
.m-0 {
  margin: 0; }

.m-l-0 {
  margin-left: 0; }

.m-r-0 {
  margin-right: 0; }

.m-horizontal-0 {
  margin-left: 0;
  margin-right: 0; }

.m-t-0 {
  margin-top: 0; }

.m-b-0 {
  margin-bottom: 0; }

.m-vertical-0 {
  margin-top: 0;
  margin-bottom: 0; }

/* Paddings */
.p-0 {
  padding: 0; }

.p-l-0 {
  padding-left: 0; }

.p-r-0 {
  padding-right: 0; }

.p-horizontal-0 {
  padding-left: 0;
  padding-right: 0; }

.p-t-0 {
  padding-top: 0; }

.p-b-0 {
  padding-bottom: 0; }

.p-vertical-0 {
  padding-top: 0;
  padding-bottom: 0; }

/* Height & Width */
.h-0 {
  height: 0; }

.h-min-0 {
  min-height: 0; }

.h-max-0 {
  max-height: 0; }

.w-0 {
  width: 0; }

.w-min-0 {
  min-width: 0; }

.w-max-0 {
  max-width: 0; }

.co-l-0 {
  left: 0; }

.co-t-0 {
  top: 0; }

.co-r-0 {
  right: 0; }

.co-b-0 {
  bottom: 0; }

.co-all-0 {
  left: 0;
  top: 0;
  bottom: 0;
  right: 0; }

/* Margins */
.m-1 {
  margin: 1px; }

.m-l-1 {
  margin-left: 1px; }

.m-r-1 {
  margin-right: 1px; }

.m-horizontal-1 {
  margin-left: 1px;
  margin-right: 1px; }

.m-t-1 {
  margin-top: 1px; }

.m-b-1 {
  margin-bottom: 1px; }

.m-vertical-1 {
  margin-top: 1px;
  margin-bottom: 1px; }

/* Paddings */
.p-1 {
  padding: 1px; }

.p-l-1 {
  padding-left: 1px; }

.p-r-1 {
  padding-right: 1px; }

.p-horizontal-1 {
  padding-left: 1px;
  padding-right: 1px; }

.p-t-1 {
  padding-top: 1px; }

.p-b-1 {
  padding-bottom: 1px; }

.p-vertical-1 {
  padding-top: 1px;
  padding-bottom: 1px; }

/* Height & Width */
.h-1 {
  height: 1px; }

.h-min-1 {
  min-height: 1px; }

.h-max-1 {
  max-height: 1px; }

.w-1 {
  width: 1px; }

.w-min-1 {
  min-width: 1px; }

.w-max-1 {
  max-width: 1px; }

.co-l-1 {
  left: 1px; }

.co-t-1 {
  top: 1px; }

.co-r-1 {
  right: 1px; }

.co-b-1 {
  bottom: 1px; }

.co-all-1 {
  left: 1px;
  top: 1px;
  bottom: 1px;
  right: 1px; }

/* Margins */
.m-2 {
  margin: 2px; }

.m-l-2 {
  margin-left: 2px; }

.m-r-2 {
  margin-right: 2px; }

.m-horizontal-2 {
  margin-left: 2px;
  margin-right: 2px; }

.m-t-2 {
  margin-top: 2px; }

.m-b-2 {
  margin-bottom: 2px; }

.m-vertical-2 {
  margin-top: 2px;
  margin-bottom: 2px; }

/* Paddings */
.p-2 {
  padding: 2px; }

.p-l-2 {
  padding-left: 2px; }

.p-r-2 {
  padding-right: 2px; }

.p-horizontal-2 {
  padding-left: 2px;
  padding-right: 2px; }

.p-t-2 {
  padding-top: 2px; }

.p-b-2 {
  padding-bottom: 2px; }

.p-vertical-2 {
  padding-top: 2px;
  padding-bottom: 2px; }

/* Height & Width */
.h-2 {
  height: 2px; }

.h-min-2 {
  min-height: 2px; }

.h-max-2 {
  max-height: 2px; }

.w-2 {
  width: 2px; }

.w-min-2 {
  min-width: 2px; }

.w-max-2 {
  max-width: 2px; }

.co-l-2 {
  left: 2px; }

.co-t-2 {
  top: 2px; }

.co-r-2 {
  right: 2px; }

.co-b-2 {
  bottom: 2px; }

.co-all-2 {
  left: 2px;
  top: 2px;
  bottom: 2px;
  right: 2px; }

/* Margins */
.m-quarterrem {
  margin: 0.25rem; }

.m-l-quarterrem {
  margin-left: 0.25rem; }

.m-r-quarterrem {
  margin-right: 0.25rem; }

.m-horizontal-quarterrem {
  margin-left: 0.25rem;
  margin-right: 0.25rem; }

.m-t-quarterrem {
  margin-top: 0.25rem; }

.m-b-quarterrem {
  margin-bottom: 0.25rem; }

.m-vertical-quarterrem {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem; }

/* Paddings */
.p-quarterrem {
  padding: 0.25rem; }

.p-l-quarterrem {
  padding-left: 0.25rem; }

.p-r-quarterrem {
  padding-right: 0.25rem; }

.p-horizontal-quarterrem {
  padding-left: 0.25rem;
  padding-right: 0.25rem; }

.p-t-quarterrem {
  padding-top: 0.25rem; }

.p-b-quarterrem {
  padding-bottom: 0.25rem; }

.p-vertical-quarterrem {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem; }

/* Height & Width */
.h-quarterrem {
  height: 0.25rem; }

.h-min-quarterrem {
  min-height: 0.25rem; }

.h-max-quarterrem {
  max-height: 0.25rem; }

.w-quarterrem {
  width: 0.25rem; }

.w-min-quarterrem {
  min-width: 0.25rem; }

.w-max-quarterrem {
  max-width: 0.25rem; }

.co-l-quarterrem {
  left: 0.25rem; }

.co-t-quarterrem {
  top: 0.25rem; }

.co-r-quarterrem {
  right: 0.25rem; }

.co-b-quarterrem {
  bottom: 0.25rem; }

.co-all-quarterrem {
  left: 0.25rem;
  top: 0.25rem;
  bottom: 0.25rem;
  right: 0.25rem; }

/* Margins */
.m-halfrem {
  margin: 0.5rem; }

.m-l-halfrem {
  margin-left: 0.5rem; }

.m-r-halfrem {
  margin-right: 0.5rem; }

.m-horizontal-halfrem {
  margin-left: 0.5rem;
  margin-right: 0.5rem; }

.m-t-halfrem {
  margin-top: 0.5rem; }

.m-b-halfrem {
  margin-bottom: 0.5rem; }

.m-vertical-halfrem {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem; }

/* Paddings */
.p-halfrem {
  padding: 0.5rem; }

.p-l-halfrem {
  padding-left: 0.5rem; }

.p-r-halfrem {
  padding-right: 0.5rem; }

.p-horizontal-halfrem {
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.p-t-halfrem {
  padding-top: 0.5rem; }

.p-b-halfrem {
  padding-bottom: 0.5rem; }

.p-vertical-halfrem {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

/* Height & Width */
.h-halfrem {
  height: 0.5rem; }

.h-min-halfrem {
  min-height: 0.5rem; }

.h-max-halfrem {
  max-height: 0.5rem; }

.w-halfrem {
  width: 0.5rem; }

.w-min-halfrem {
  min-width: 0.5rem; }

.w-max-halfrem {
  max-width: 0.5rem; }

.co-l-halfrem {
  left: 0.5rem; }

.co-t-halfrem {
  top: 0.5rem; }

.co-r-halfrem {
  right: 0.5rem; }

.co-b-halfrem {
  bottom: 0.5rem; }

.co-all-halfrem {
  left: 0.5rem;
  top: 0.5rem;
  bottom: 0.5rem;
  right: 0.5rem; }

/* Margins */
.m-1rem {
  margin: 1rem; }

.m-l-1rem {
  margin-left: 1rem; }

.m-r-1rem {
  margin-right: 1rem; }

.m-horizontal-1rem {
  margin-left: 1rem;
  margin-right: 1rem; }

.m-t-1rem {
  margin-top: 1rem; }

.m-b-1rem {
  margin-bottom: 1rem; }

.m-vertical-1rem {
  margin-top: 1rem;
  margin-bottom: 1rem; }

/* Paddings */
.p-1rem {
  padding: 1rem; }

.p-l-1rem {
  padding-left: 1rem; }

.p-r-1rem {
  padding-right: 1rem; }

.p-horizontal-1rem {
  padding-left: 1rem;
  padding-right: 1rem; }

.p-t-1rem {
  padding-top: 1rem; }

.p-b-1rem {
  padding-bottom: 1rem; }

.p-vertical-1rem {
  padding-top: 1rem;
  padding-bottom: 1rem; }

/* Height & Width */
.h-1rem {
  height: 1rem; }

.h-min-1rem {
  min-height: 1rem; }

.h-max-1rem {
  max-height: 1rem; }

.w-1rem {
  width: 1rem; }

.w-min-1rem {
  min-width: 1rem; }

.w-max-1rem {
  max-width: 1rem; }

.co-l-1rem {
  left: 1rem; }

.co-t-1rem {
  top: 1rem; }

.co-r-1rem {
  right: 1rem; }

.co-b-1rem {
  bottom: 1rem; }

.co-all-1rem {
  left: 1rem;
  top: 1rem;
  bottom: 1rem;
  right: 1rem; }

/* Margins */
.m-2rem {
  margin: 2rem; }

.m-l-2rem {
  margin-left: 2rem; }

.m-r-2rem {
  margin-right: 2rem; }

.m-horizontal-2rem {
  margin-left: 2rem;
  margin-right: 2rem; }

.m-t-2rem {
  margin-top: 2rem; }

.m-b-2rem {
  margin-bottom: 2rem; }

.m-vertical-2rem {
  margin-top: 2rem;
  margin-bottom: 2rem; }

/* Paddings */
.p-2rem {
  padding: 2rem; }

.p-l-2rem {
  padding-left: 2rem; }

.p-r-2rem {
  padding-right: 2rem; }

.p-horizontal-2rem {
  padding-left: 2rem;
  padding-right: 2rem; }

.p-t-2rem {
  padding-top: 2rem; }

.p-b-2rem {
  padding-bottom: 2rem; }

.p-vertical-2rem {
  padding-top: 2rem;
  padding-bottom: 2rem; }

/* Height & Width */
.h-2rem {
  height: 2rem; }

.h-min-2rem {
  min-height: 2rem; }

.h-max-2rem {
  max-height: 2rem; }

.w-2rem {
  width: 2rem; }

.w-min-2rem {
  min-width: 2rem; }

.w-max-2rem {
  max-width: 2rem; }

.co-l-2rem {
  left: 2rem; }

.co-t-2rem {
  top: 2rem; }

.co-r-2rem {
  right: 2rem; }

.co-b-2rem {
  bottom: 2rem; }

.co-all-2rem {
  left: 2rem;
  top: 2rem;
  bottom: 2rem;
  right: 2rem; }

/* Margins */
.m-3rem {
  margin: 3rem; }

.m-l-3rem {
  margin-left: 3rem; }

.m-r-3rem {
  margin-right: 3rem; }

.m-horizontal-3rem {
  margin-left: 3rem;
  margin-right: 3rem; }

.m-t-3rem {
  margin-top: 3rem; }

.m-b-3rem {
  margin-bottom: 3rem; }

.m-vertical-3rem {
  margin-top: 3rem;
  margin-bottom: 3rem; }

/* Paddings */
.p-3rem {
  padding: 3rem; }

.p-l-3rem {
  padding-left: 3rem; }

.p-r-3rem {
  padding-right: 3rem; }

.p-horizontal-3rem {
  padding-left: 3rem;
  padding-right: 3rem; }

.p-t-3rem {
  padding-top: 3rem; }

.p-b-3rem {
  padding-bottom: 3rem; }

.p-vertical-3rem {
  padding-top: 3rem;
  padding-bottom: 3rem; }

/* Height & Width */
.h-3rem {
  height: 3rem; }

.h-min-3rem {
  min-height: 3rem; }

.h-max-3rem {
  max-height: 3rem; }

.w-3rem {
  width: 3rem; }

.w-min-3rem {
  min-width: 3rem; }

.w-max-3rem {
  max-width: 3rem; }

.co-l-3rem {
  left: 3rem; }

.co-t-3rem {
  top: 3rem; }

.co-r-3rem {
  right: 3rem; }

.co-b-3rem {
  bottom: 3rem; }

.co-all-3rem {
  left: 3rem;
  top: 3rem;
  bottom: 3rem;
  right: 3rem; }

/* Margins */
.m-4rem {
  margin: 4rem; }

.m-l-4rem {
  margin-left: 4rem; }

.m-r-4rem {
  margin-right: 4rem; }

.m-horizontal-4rem {
  margin-left: 4rem;
  margin-right: 4rem; }

.m-t-4rem {
  margin-top: 4rem; }

.m-b-4rem {
  margin-bottom: 4rem; }

.m-vertical-4rem {
  margin-top: 4rem;
  margin-bottom: 4rem; }

/* Paddings */
.p-4rem {
  padding: 4rem; }

.p-l-4rem {
  padding-left: 4rem; }

.p-r-4rem {
  padding-right: 4rem; }

.p-horizontal-4rem {
  padding-left: 4rem;
  padding-right: 4rem; }

.p-t-4rem {
  padding-top: 4rem; }

.p-b-4rem {
  padding-bottom: 4rem; }

.p-vertical-4rem {
  padding-top: 4rem;
  padding-bottom: 4rem; }

/* Height & Width */
.h-4rem {
  height: 4rem; }

.h-min-4rem {
  min-height: 4rem; }

.h-max-4rem {
  max-height: 4rem; }

.w-4rem {
  width: 4rem; }

.w-min-4rem {
  min-width: 4rem; }

.w-max-4rem {
  max-width: 4rem; }

.co-l-4rem {
  left: 4rem; }

.co-t-4rem {
  top: 4rem; }

.co-r-4rem {
  right: 4rem; }

.co-b-4rem {
  bottom: 4rem; }

.co-all-4rem {
  left: 4rem;
  top: 4rem;
  bottom: 4rem;
  right: 4rem; }

/* Margins */
.m-5rem {
  margin: 5rem; }

.m-l-5rem {
  margin-left: 5rem; }

.m-r-5rem {
  margin-right: 5rem; }

.m-horizontal-5rem {
  margin-left: 5rem;
  margin-right: 5rem; }

.m-t-5rem {
  margin-top: 5rem; }

.m-b-5rem {
  margin-bottom: 5rem; }

.m-vertical-5rem {
  margin-top: 5rem;
  margin-bottom: 5rem; }

/* Paddings */
.p-5rem {
  padding: 5rem; }

.p-l-5rem {
  padding-left: 5rem; }

.p-r-5rem {
  padding-right: 5rem; }

.p-horizontal-5rem {
  padding-left: 5rem;
  padding-right: 5rem; }

.p-t-5rem {
  padding-top: 5rem; }

.p-b-5rem {
  padding-bottom: 5rem; }

.p-vertical-5rem {
  padding-top: 5rem;
  padding-bottom: 5rem; }

/* Height & Width */
.h-5rem {
  height: 5rem; }

.h-min-5rem {
  min-height: 5rem; }

.h-max-5rem {
  max-height: 5rem; }

.w-5rem {
  width: 5rem; }

.w-min-5rem {
  min-width: 5rem; }

.w-max-5rem {
  max-width: 5rem; }

.co-l-5rem {
  left: 5rem; }

.co-t-5rem {
  top: 5rem; }

.co-r-5rem {
  right: 5rem; }

.co-b-5rem {
  bottom: 5rem; }

.co-all-5rem {
  left: 5rem;
  top: 5rem;
  bottom: 5rem;
  right: 5rem; }

/* Margins */
.m-6rem {
  margin: 6rem; }

.m-l-6rem {
  margin-left: 6rem; }

.m-r-6rem {
  margin-right: 6rem; }

.m-horizontal-6rem {
  margin-left: 6rem;
  margin-right: 6rem; }

.m-t-6rem {
  margin-top: 6rem; }

.m-b-6rem {
  margin-bottom: 6rem; }

.m-vertical-6rem {
  margin-top: 6rem;
  margin-bottom: 6rem; }

/* Paddings */
.p-6rem {
  padding: 6rem; }

.p-l-6rem {
  padding-left: 6rem; }

.p-r-6rem {
  padding-right: 6rem; }

.p-horizontal-6rem {
  padding-left: 6rem;
  padding-right: 6rem; }

.p-t-6rem {
  padding-top: 6rem; }

.p-b-6rem {
  padding-bottom: 6rem; }

.p-vertical-6rem {
  padding-top: 6rem;
  padding-bottom: 6rem; }

/* Height & Width */
.h-6rem {
  height: 6rem; }

.h-min-6rem {
  min-height: 6rem; }

.h-max-6rem {
  max-height: 6rem; }

.w-6rem {
  width: 6rem; }

.w-min-6rem {
  min-width: 6rem; }

.w-max-6rem {
  max-width: 6rem; }

.co-l-6rem {
  left: 6rem; }

.co-t-6rem {
  top: 6rem; }

.co-r-6rem {
  right: 6rem; }

.co-b-6rem {
  bottom: 6rem; }

.co-all-6rem {
  left: 6rem;
  top: 6rem;
  bottom: 6rem;
  right: 6rem; }

/* Margins */
.m-7rem {
  margin: 7rem; }

.m-l-7rem {
  margin-left: 7rem; }

.m-r-7rem {
  margin-right: 7rem; }

.m-horizontal-7rem {
  margin-left: 7rem;
  margin-right: 7rem; }

.m-t-7rem {
  margin-top: 7rem; }

.m-b-7rem {
  margin-bottom: 7rem; }

.m-vertical-7rem {
  margin-top: 7rem;
  margin-bottom: 7rem; }

/* Paddings */
.p-7rem {
  padding: 7rem; }

.p-l-7rem {
  padding-left: 7rem; }

.p-r-7rem {
  padding-right: 7rem; }

.p-horizontal-7rem {
  padding-left: 7rem;
  padding-right: 7rem; }

.p-t-7rem {
  padding-top: 7rem; }

.p-b-7rem {
  padding-bottom: 7rem; }

.p-vertical-7rem {
  padding-top: 7rem;
  padding-bottom: 7rem; }

/* Height & Width */
.h-7rem {
  height: 7rem; }

.h-min-7rem {
  min-height: 7rem; }

.h-max-7rem {
  max-height: 7rem; }

.w-7rem {
  width: 7rem; }

.w-min-7rem {
  min-width: 7rem; }

.w-max-7rem {
  max-width: 7rem; }

.co-l-7rem {
  left: 7rem; }

.co-t-7rem {
  top: 7rem; }

.co-r-7rem {
  right: 7rem; }

.co-b-7rem {
  bottom: 7rem; }

.co-all-7rem {
  left: 7rem;
  top: 7rem;
  bottom: 7rem;
  right: 7rem; }

/* Margins */
.m-8rem {
  margin: 8rem; }

.m-l-8rem {
  margin-left: 8rem; }

.m-r-8rem {
  margin-right: 8rem; }

.m-horizontal-8rem {
  margin-left: 8rem;
  margin-right: 8rem; }

.m-t-8rem {
  margin-top: 8rem; }

.m-b-8rem {
  margin-bottom: 8rem; }

.m-vertical-8rem {
  margin-top: 8rem;
  margin-bottom: 8rem; }

/* Paddings */
.p-8rem {
  padding: 8rem; }

.p-l-8rem {
  padding-left: 8rem; }

.p-r-8rem {
  padding-right: 8rem; }

.p-horizontal-8rem {
  padding-left: 8rem;
  padding-right: 8rem; }

.p-t-8rem {
  padding-top: 8rem; }

.p-b-8rem {
  padding-bottom: 8rem; }

.p-vertical-8rem {
  padding-top: 8rem;
  padding-bottom: 8rem; }

/* Height & Width */
.h-8rem {
  height: 8rem; }

.h-min-8rem {
  min-height: 8rem; }

.h-max-8rem {
  max-height: 8rem; }

.w-8rem {
  width: 8rem; }

.w-min-8rem {
  min-width: 8rem; }

.w-max-8rem {
  max-width: 8rem; }

.co-l-8rem {
  left: 8rem; }

.co-t-8rem {
  top: 8rem; }

.co-r-8rem {
  right: 8rem; }

.co-b-8rem {
  bottom: 8rem; }

.co-all-8rem {
  left: 8rem;
  top: 8rem;
  bottom: 8rem;
  right: 8rem; }

/* Margins */
.m-9rem {
  margin: 9rem; }

.m-l-9rem {
  margin-left: 9rem; }

.m-r-9rem {
  margin-right: 9rem; }

.m-horizontal-9rem {
  margin-left: 9rem;
  margin-right: 9rem; }

.m-t-9rem {
  margin-top: 9rem; }

.m-b-9rem {
  margin-bottom: 9rem; }

.m-vertical-9rem {
  margin-top: 9rem;
  margin-bottom: 9rem; }

/* Paddings */
.p-9rem {
  padding: 9rem; }

.p-l-9rem {
  padding-left: 9rem; }

.p-r-9rem {
  padding-right: 9rem; }

.p-horizontal-9rem {
  padding-left: 9rem;
  padding-right: 9rem; }

.p-t-9rem {
  padding-top: 9rem; }

.p-b-9rem {
  padding-bottom: 9rem; }

.p-vertical-9rem {
  padding-top: 9rem;
  padding-bottom: 9rem; }

/* Height & Width */
.h-9rem {
  height: 9rem; }

.h-min-9rem {
  min-height: 9rem; }

.h-max-9rem {
  max-height: 9rem; }

.w-9rem {
  width: 9rem; }

.w-min-9rem {
  min-width: 9rem; }

.w-max-9rem {
  max-width: 9rem; }

.co-l-9rem {
  left: 9rem; }

.co-t-9rem {
  top: 9rem; }

.co-r-9rem {
  right: 9rem; }

.co-b-9rem {
  bottom: 9rem; }

.co-all-9rem {
  left: 9rem;
  top: 9rem;
  bottom: 9rem;
  right: 9rem; }

/* Margins */
.m-10rem {
  margin: 10rem; }

.m-l-10rem {
  margin-left: 10rem; }

.m-r-10rem {
  margin-right: 10rem; }

.m-horizontal-10rem {
  margin-left: 10rem;
  margin-right: 10rem; }

.m-t-10rem {
  margin-top: 10rem; }

.m-b-10rem {
  margin-bottom: 10rem; }

.m-vertical-10rem {
  margin-top: 10rem;
  margin-bottom: 10rem; }

/* Paddings */
.p-10rem {
  padding: 10rem; }

.p-l-10rem {
  padding-left: 10rem; }

.p-r-10rem {
  padding-right: 10rem; }

.p-horizontal-10rem {
  padding-left: 10rem;
  padding-right: 10rem; }

.p-t-10rem {
  padding-top: 10rem; }

.p-b-10rem {
  padding-bottom: 10rem; }

.p-vertical-10rem {
  padding-top: 10rem;
  padding-bottom: 10rem; }

/* Height & Width */
.h-10rem {
  height: 10rem; }

.h-min-10rem {
  min-height: 10rem; }

.h-max-10rem {
  max-height: 10rem; }

.w-10rem {
  width: 10rem; }

.w-min-10rem {
  min-width: 10rem; }

.w-max-10rem {
  max-width: 10rem; }

.co-l-10rem {
  left: 10rem; }

.co-t-10rem {
  top: 10rem; }

.co-r-10rem {
  right: 10rem; }

.co-b-10rem {
  bottom: 10rem; }

.co-all-10rem {
  left: 10rem;
  top: 10rem;
  bottom: 10rem;
  right: 10rem; }

/* Height & Width */
.h-100 {
  height: 100%; }

.h-min-100 {
  min-height: 100%; }

.h-max-100 {
  max-height: 100%; }

.w-100 {
  width: 100%; }

.w-min-100 {
  min-width: 100%; }

.w-max-100 {
  max-width: 100%; }

/* Height & Width */
.h-90 {
  height: 90%; }

.h-min-90 {
  min-height: 90%; }

.h-max-90 {
  max-height: 90%; }

.w-90 {
  width: 90%; }

.w-min-90 {
  min-width: 90%; }

.w-max-90 {
  max-width: 90%; }

/* Height & Width */
.h-80 {
  height: 80%; }

.h-min-80 {
  min-height: 80%; }

.h-max-80 {
  max-height: 80%; }

.w-80 {
  width: 80%; }

.w-min-80 {
  min-width: 80%; }

.w-max-80 {
  max-width: 80%; }

/* Height & Width */
.h-70 {
  height: 70%; }

.h-min-70 {
  min-height: 70%; }

.h-max-70 {
  max-height: 70%; }

.w-70 {
  width: 70%; }

.w-min-70 {
  min-width: 70%; }

.w-max-70 {
  max-width: 70%; }

/* Height & Width */
.h-60 {
  height: 60%; }

.h-min-60 {
  min-height: 60%; }

.h-max-60 {
  max-height: 60%; }

.w-60 {
  width: 60%; }

.w-min-60 {
  min-width: 60%; }

.w-max-60 {
  max-width: 60%; }

/* Height & Width */
.h-50 {
  height: 50%; }

.h-min-50 {
  min-height: 50%; }

.h-max-50 {
  max-height: 50%; }

.w-50 {
  width: 50%; }

.w-min-50 {
  min-width: 50%; }

.w-max-50 {
  max-width: 50%; }

/* Height & Width */
.h-40 {
  height: 40%; }

.h-min-40 {
  min-height: 40%; }

.h-max-40 {
  max-height: 40%; }

.w-40 {
  width: 40%; }

.w-min-40 {
  min-width: 40%; }

.w-max-40 {
  max-width: 40%; }

/* Height & Width */
.h-33 {
  height: 33.33333%; }

.h-min-33 {
  min-height: 33.33333%; }

.h-max-33 {
  max-height: 33.33333%; }

.w-33 {
  width: 33.33333%; }

.w-min-33 {
  min-width: 33.33333%; }

.w-max-33 {
  max-width: 33.33333%; }

/* Height & Width */
.h-30 {
  height: 30%; }

.h-min-30 {
  min-height: 30%; }

.h-max-30 {
  max-height: 30%; }

.w-30 {
  width: 30%; }

.w-min-30 {
  min-width: 30%; }

.w-max-30 {
  max-width: 30%; }

/* Height & Width */
.h-20 {
  height: 20%; }

.h-min-20 {
  min-height: 20%; }

.h-max-20 {
  max-height: 20%; }

.w-20 {
  width: 20%; }

.w-min-20 {
  min-width: 20%; }

.w-max-20 {
  max-width: 20%; }

/* Height & Width */
.h-15 {
  height: 15%; }

.h-min-15 {
  min-height: 15%; }

.h-max-15 {
  max-height: 15%; }

.w-15 {
  width: 15%; }

.w-min-15 {
  min-width: 15%; }

.w-max-15 {
  max-width: 15%; }

/* Height & Width */
.h-10 {
  height: 10%; }

.h-min-10 {
  min-height: 10%; }

.h-max-10 {
  max-height: 10%; }

.w-10 {
  width: 10%; }

.w-min-10 {
  min-width: 10%; }

.w-max-10 {
  max-width: 10%; }

/*
    Fonts and Typography.
    Another core part of the system that initializes the relative sizes of fonts and headers.
*/
html {
  font-size: 8px; }

/* 
    Set the font size again as we want it to be slightly smaller than the base font size. 
*/
@media only screen and (orientation: portrait) and (-webkit-min-device-pixel-ratio: 2) {
  html {
    font-size: 16px !important; } }

.fs-1 {
  font-size: 8.75rem; }

.fs-2 {
  font-size: 7rem; }

.fs-3 {
  font-size: 5.25rem; }

.fs-4 {
  font-size: 3.5rem; }

.fs-5 {
  font-size: 1.75rem; }

.fs-6, body {
  font-size: 1.75rem; }

.fs-7 {
  font-size: 1.5rem; }

/* 
    Setup font sizes and other specific typographic properties 
*/
h1 {
  font-size: 8.75rem; }

h2 {
  font-size: 7rem; }

h3 {
  font-size: 5.25rem; }

h4 {
  font-size: 3.5rem; }

h5 {
  font-size: 1.75rem; }

.fw-bold {
  font-weight: bold; }

.fw-normal {
  font-weight: normal; }

.fw-lighter {
  font-weight: lighter; }

.fw-bolder {
  font-weight: bolder; }

.fw-0 {
  font-weight: 100; }

.fw-1 {
  font-weight: 200; }

.fw-2 {
  font-weight: 300; }

.fw-3 {
  font-weight: 400; }

.fw-4 {
  font-weight: 500; }

.fw-5 {
  font-weight: 600; }

.lh-solid {
  line-height: 1; }

.lh-title {
  line-height: 1.3; }

.lh-copy {
  line-height: 1.6; }

/*
    Opacity.
    By default, the system caters for 10 variations (ie: .1) of opacity.
*/
.o-0 {
  opacity: 0; }

.o-10 {
  opacity: 0.1; }

.o-20 {
  opacity: 0.2; }

.o-30 {
  opacity: 0.3; }

.o-40 {
  opacity: 0.4; }

.o-50 {
  opacity: 0.5; }

.o-60 {
  opacity: 0.6; }

.o-70 {
  opacity: 0.7; }

.o-80 {
  opacity: 0.8; }

.o-90 {
  opacity: 0.9; }

.o-100 {
  opacity: 1; }

/*
    Z-index.
    By default, the system caters for 10 zindex variations.
*/
.z-0 {
  z-index: 0; }

.z-1 {
  z-index: 1; }

.z-2 {
  z-index: 2; }

.z-3 {
  z-index: 3; }

.z-4 {
  z-index: 4; }

.z-5 {
  z-index: 5; }

.z-6 {
  z-index: 6; }

.z-7 {
  z-index: 7; }

.z-8 {
  z-index: 8; }

.z-9 {
  z-index: 9; }

.z-10 {
  z-index: 10; }

/*
    Borders.
    These are typically a cutdown set of sizes, as having the full set of sized borders is overkill.
 */
.br-0 {
  border-style: solid;
  border-width: 0; }

.br-t-0 {
  border-style: solid;
  border-top-width: 0; }

.br-b-0 {
  border-style: solid;
  border-bottom-width: 0; }

.br-l-0 {
  border-style: solid;
  border-left-width: 0; }

.br-r-0 {
  border-style: solid;
  border-right-width: 0; }

.br-horizontal-0 {
  border-style: solid;
  border-left-width: 0;
  border-right-width: 0; }

.br-vertical-0 {
  border-style: solid;
  border-top-width: 0;
  border-bottom-width: 0; }

.br-ra-0 {
  border-radius: 0; }

.br-ra-tl-0 {
  border-top-left-radius: 0; }

.br-ra-tr-0 {
  border-top-right-radius: 0; }

.br-ra-bl-0 {
  border-bottom-left-radius: 0; }

.br-ra-br-0 {
  border-bottom-right-radius: 0; }

.br-1 {
  border-style: solid;
  border-width: 1px; }

.br-t-1 {
  border-style: solid;
  border-top-width: 1px; }

.br-b-1 {
  border-style: solid;
  border-bottom-width: 1px; }

.br-l-1 {
  border-style: solid;
  border-left-width: 1px; }

.br-r-1 {
  border-style: solid;
  border-right-width: 1px; }

.br-horizontal-1 {
  border-style: solid;
  border-left-width: 1px;
  border-right-width: 1px; }

.br-vertical-1 {
  border-style: solid;
  border-top-width: 1px;
  border-bottom-width: 1px; }

.br-ra-1 {
  border-radius: 1px; }

.br-ra-tl-1 {
  border-top-left-radius: 1px; }

.br-ra-tr-1 {
  border-top-right-radius: 1px; }

.br-ra-bl-1 {
  border-bottom-left-radius: 1px; }

.br-ra-br-1 {
  border-bottom-right-radius: 1px; }

.br-quarterrem {
  border-style: solid;
  border-width: 0.25rem; }

.br-t-quarterrem {
  border-style: solid;
  border-top-width: 0.25rem; }

.br-b-quarterrem {
  border-style: solid;
  border-bottom-width: 0.25rem; }

.br-l-quarterrem {
  border-style: solid;
  border-left-width: 0.25rem; }

.br-r-quarterrem {
  border-style: solid;
  border-right-width: 0.25rem; }

.br-horizontal-quarterrem {
  border-style: solid;
  border-left-width: 0.25rem;
  border-right-width: 0.25rem; }

.br-vertical-quarterrem {
  border-style: solid;
  border-top-width: 0.25rem;
  border-bottom-width: 0.25rem; }

.br-ra-quarterrem {
  border-radius: 0.25rem; }

.br-ra-tl-quarterrem {
  border-top-left-radius: 0.25rem; }

.br-ra-tr-quarterrem {
  border-top-right-radius: 0.25rem; }

.br-ra-bl-quarterrem {
  border-bottom-left-radius: 0.25rem; }

.br-ra-br-quarterrem {
  border-bottom-right-radius: 0.25rem; }

.br-halfrem {
  border-style: solid;
  border-width: 0.5rem; }

.br-t-halfrem {
  border-style: solid;
  border-top-width: 0.5rem; }

.br-b-halfrem {
  border-style: solid;
  border-bottom-width: 0.5rem; }

.br-l-halfrem {
  border-style: solid;
  border-left-width: 0.5rem; }

.br-r-halfrem {
  border-style: solid;
  border-right-width: 0.5rem; }

.br-horizontal-halfrem {
  border-style: solid;
  border-left-width: 0.5rem;
  border-right-width: 0.5rem; }

.br-vertical-halfrem {
  border-style: solid;
  border-top-width: 0.5rem;
  border-bottom-width: 0.5rem; }

.br-ra-halfrem {
  border-radius: 0.5rem; }

.br-ra-tl-halfrem {
  border-top-left-radius: 0.5rem; }

.br-ra-tr-halfrem {
  border-top-right-radius: 0.5rem; }

.br-ra-bl-halfrem {
  border-bottom-left-radius: 0.5rem; }

.br-ra-br-halfrem {
  border-bottom-right-radius: 0.5rem; }

/*
    Transitions.
    Sets up some lightweight classes to handle transition sizes.
*/
.transition-s {
  transition: opacity 0.25s ease-out, fill 0.25s ease-out, color 0.25s ease-out, background-color 0.25s ease-out, stroke 0.25s ease-out; }

.transition-all-s {
  transition: all 0.25s ease-out; }

.transition-m {
  transition: opacity 0.5s ease-out, fill 0.5s ease-out, color 0.5s ease-out, background-color 0.5s ease-out, stroke 0.5s ease-out; }

.transition-all-m {
  transition: all 0.5s ease-out; }

.transition-l {
  transition: opacity 0.75s ease-out, fill 0.75s ease-out, color 0.75s ease-out, background-color 0.75s ease-out, stroke 0.75s ease-out; }

.transition-all-l {
  transition: all 0.75s ease-out; }

.transition-xl {
  transition: opacity 1s ease-out, fill 1s ease-out, color 1s ease-out, background-color 1s ease-out, stroke 1s ease-out; }

.transition-all-xl {
  transition: all 1s ease-out; }

/*
    -------------------------------
            Optional mixins
    -------------------------------
*/
/*
    Outlines.
    Similar to borders, but layout differently.
*/
.oline-0 {
  outline-width: 0; }

.oline-1 {
  outline-width: 1px; }

.oline-quarterrem {
  outline-width: 0.25rem; }

.oline-halfrem {
  outline-width: 0.5rem; }

.oline-offset-0 {
  outline-offset: 0; }

.oline-offset-1 {
  outline-offset: 1px; }

.oline-offset-quarterrem {
  outline-offset: 0.25rem; }

.oline-offset-halfrem {
  outline-offset: 0.5rem; }

.oline-offset-1rem {
  outline-offset: 1rem; }

.oline-offset-2rem {
  outline-offset: 2rem; }

/*
    Flexbox Grid.
    Set up a basic 8-column grid with a default gutter.
    Note that this will probably become irrelevant the more CSS Grid support picks up.
*/
.col-1 {
  width: 12.5%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-1 {
  height: 12.5%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.col-2 {
  width: 25%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-2 {
  height: 25%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.col-3 {
  width: 37.5%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-3 {
  height: 37.5%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.col-4 {
  width: 50%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-4 {
  height: 50%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.col-5 {
  width: 62.5%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-5 {
  height: 62.5%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.col-6 {
  width: 75%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-6 {
  height: 75%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.col-7 {
  width: 87.5%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-7 {
  height: 87.5%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.col-8 {
  width: 100%;
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.row-8 {
  height: 100%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

/*
    Box shadows.
    Simple box shadow classes with default values.
*/
.bshad-halfrem {
  box-shadow: 0 0.5rem 2rem 0.5rem rgba(0, 0, 0, 0.3); }
