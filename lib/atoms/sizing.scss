/* 
    Modular css to define sizing-related classes - not to be confused with layout.     

    This will generate classes that represent margins, paddings, widths and heights.

    .m-0: no margin
    .m-[size] : margin on all sides
    .m-l-[size] : left margin
    .m-r-[size] : right margin
    .m-t-[size] : top margin
    .m-b-[size] : bottom margin
    .m-horizontal-[size] : left and right margin
    .m-vertical-[size]: top and bottom margin

    .p- | none | l | r | t | b | horizontal | vertical | - [size] : paddings

    .w-[size] : width
    .w-min-[size] : min-width
    .h-[size] : height
    .h-min-[size] : min-height
*/

$s-auto:        auto;
$s-quarterrem:  0.25rem;
$s-halfrem:     0.5rem;
$s-1rem:        1rem;
$s-2rem:        2rem;
$s-3rem:        3rem;
$s-4rem:        4rem;
$s-5rem:        5rem;
$s-6rem:        6rem;

$s-0:           0;
$s-90:          90%;
$s-80:          80%;
$s-70:          70%;
$s-60:          60%;
$s-50:          50%;
$s-40:          40%;
$s-33:          33.3333333333%;
$s-30:          30%;
$s-25:          25%;
$s-20:          20%;
$s-15:          15%;
$s-10:          10%;
$s-100:         100%;

$sizes: (
    auto: $s-auto,
    0: $s-0,
    halfrem: $s-halfrem,
    1rem: $s-1rem,
    2rem: $s-2rem,
    3rem: $s-3rem,
    4rem: $s-4rem,
    5rem: $s-5rem,
    6rem: $s-6rem
);

@mixin coord-proc($label, $pos) {
    .co-l-#{$label} {
        left: $pos;
    }
    .co-t-#{$label} {
        top: $pos;
    }
    .co-r-#{$label} {
        right: $pos;
    }
    .co-b-#{$label} {
        bottom: $pos;
    }
    .co-all-#{$label} {
        left: $pos;
        top: $pos;
        bottom: $pos;
        right: $pos;
    }
}

@mixin dimension-proc($label, $size) {
    /* Height & Width */
    .h-#{$label} {
        height: $size;
    }
    .h-min-#{$label} {
        min-height: $size;
    }
    .h-max-#{$label} {
        max-height: $size;
    }
    .w-#{$label} {
        width: $size;
    }
    .w-min-#{$label} {
        min-width: $size;
    }
    .w-max-#{$label} {
        max-width: $size;
    }
}

@mixin sizing-proc {
    @each $label, $size in $sizes {
        /* Margins */
        .m-#{$label} {
            margin: $size;
        }   
        .m-l-#{$label} {
            margin-left: $size;
        }
        .m-r-#{$label} {
            margin-right: $size;
        }
        .m-horizontal-#{$label} {
            margin-left: $size;
            margin-right: $size;
        }
        .m-t-#{$label} {
            margin-top: $size;
        }
        .m-b-#{$label} {
            margin-bottom: $size;
        }
        .m-vertical-#{$label} {
            margin-top: $size;
            margin-bottom: $size;
        }

        /* Paddings */
        .p-#{$label} {
            padding: $size;
        }
        .p-l-#{$label} {
            padding-left: $size;
        }
        .p-r-#{$label} {
            padding-right: $size;
        }
        .p-horizontal-#{$label} {
            padding-left: $size;
            padding-right: $size;
        }   
        .p-t-#{$label} {
            padding-top: $size;
        }
        .p-b-#{$label} {
            padding-bottom: $size;
        }
        .p-vertical-#{$label} {
            padding-top: $size;
            padding-bottom: $size;
        }

        @include dimension-proc($label, $size);
        @include coord-proc($label, $size);
    }
}

@include sizing-proc;

/*
    Percentage sizes
*/
$percentage-sizes: (
    100: $s-100,
    90: $s-90, 
    80: $s-80, 
    70: $s-70, 
    60: $s-60, 
    50: $s-50, 
    40: $s-40, 
    33: $s-33, 
    30: $s-30, 
    20: $s-20, 
    15: $s-15, 
    10: $s-10
);

@mixin percentage-proc {
    @each $label, $p in $percentage-sizes {
        @include dimension-proc($label, $p);
    }
}

@include percentage-proc;